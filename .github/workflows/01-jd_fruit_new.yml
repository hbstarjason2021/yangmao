name: 01jd_fruit_new_task

on:  
  #push: # push触发
  #  branches: [ main ]
  workflow_dispatch: # 手动触发
  schedule: # 计划任务触发
  #  - cron: '3 0-23/2 * * *' # cron表达式，Actions时区是UTC时间，所以要往前推8个小时
  
     #- cron: '3 2,5,13 * * *' 
     - cron: '3 1,5,13,15 * * *'
      # https://tool.lu/crontab/
      # https://datetime360.com/cn/utc-cst-china-time/
    
jobs:
  jd_info:

    # https://docs.github.com/zh/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#viewing-available-runners-for-a-repository
    runs-on: ubuntu-latest

    #runs-on: ubuntu-20.04
    steps:   
    # 检出
    #- name: Checkout
    #  uses: actions/checkout@v2
      
    # 设置服务器时区为东八区 
    #- name: Set time zone
    #  run: |
    #     sudo timedatectl set-timezone 'Asia/Shanghai'
    #     current_time=$(date +"%Y-%m-%d-%k")
    #     echo ${current_time}
         
    - name: Run jd_task
      # shell: bash
      #env: 
      #   ENV1: ${{ secrets.ENV1 }}

      #env: 
      #   UNICOM: ${{ secrets.UNICOM }}
      
      run: |
         echo "=== current_time ==="

         countryCode=$(curl -s "http://ip-api.com/line/?fields=countryCode")
         echo ${countryCode}
         
         
         sudo timedatectl set-timezone 'Asia/Shanghai'
         current_time=$(date +"%Y-%m-%d-%k")
         echo ${current_time}
        
         docker info
         docker-compose version
         
         git clone https://github.com/hbstarjason2021/jd-scripts-docker && cd jd-scripts-docker
         docker pull hbstarjason/jd-scripts

         ls -l 

         docker images 

         echo "=== replace env ==="

         ## ESCAPED_PASSWORD=$(echo '${{ secrets.KEY1_BASE64 }}' | base64 --decode | sed 's/"/\\"/g')
         ## echo '$ESCAPED_PASSWORD' > env/env1 

         echo '${{ secrets.ENV1 }}' > env/env1 
         echo '${{ secrets.ENV2 }}' > env/env2
         echo '${{ secrets.ENV4 }}' > env/env4

         echo '${{ secrets.UNICOM }}' > env/unicom

         echo '${{ secrets.HALUO }}' > env/haluo

         pwd

         ls -l env
         

         echo "==== run container ===="  
         docker-compose up --no-build --force-recreate --detach jd1
         docker-compose up --no-build --force-recreate --detach jd2
         docker-compose up --no-build --force-recreate --detach jd4

         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_bean_change_ccwav.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_bean_change_ccwav.js'
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_bean_change_ccwav.js'

         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; python3  jd_beans_7days.py'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; python3  jd_beans_7days.py'
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; python3  jd_beans_7days.py'
         
         echo "==== run task ====" 

         cp 01run.sh 02run.sh &&  sed -i 's/jd1/jd2/g'  02run.sh
         cp 01run.sh 04run.sh &&  sed -i 's/jd1/jd4/g'  04run.sh

         #docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit-6dy.js'
         #docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit-6dy.js'
         #docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit-6dy.js'


         #sh 01run.sh
         #sh 04run.sh
         #sh 02run.sh

         ###### 哈啰签到
         #docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node hl.js'

         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; hlToken="${{ secrets.HALUO }}" ; node hl.js'

         ###### 联通
         #docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node chinaUnicom.js'

         ###### jd_vxFans.js
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_vxFans.js'

         ##### jd_video_view.js
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_video_view.js'

         
         ###### 刮一刮
         #docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_gghb_draw.js'
         #docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_gghb_draw.js'
         #docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_gghb_draw.js' 

         ###### 转盘抽豆
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_pan_lottery.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_pan_lottery.js'
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_pan_lottery.js' 
         
         ###### 618开心夜task
         #docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_618kxy_task.js'
         #docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_618kxy_task.js'
         #docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_618kxy_task.js'
                  
         ###### 种豆得豆
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean-6dy.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean-6dy.js'
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean-6dy.js'
         
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean_help-6dy.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean_help-6dy.js'
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean_help-6dy.js'

         ###### 积分换话费
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_dwapp-6dy.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_dwapp-6dy.js'
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_dwapp-6dy.js'
       

  jd1_fruit_new_task:

    # https://docs.github.com/zh/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#viewing-available-runners-for-a-repository
    runs-on: ubuntu-latest
    needs: jd_info
    #runs-on: ubuntu-20.04
    steps:     
    - name: Run jd1_fruit_new_task
      run: |
         echo "=== current_time ==="
         
         sudo timedatectl set-timezone 'Asia/Shanghai'
         current_time=$(date +"%Y-%m-%d-%k")
         echo ${current_time}
        
         docker info
         docker-compose version
         
         git clone https://github.com/hbstarjason2021/jd-scripts-docker && cd jd-scripts-docker
         docker pull hbstarjason/jd-scripts

         ls -l 

         echo "=== replace env ==="

         echo '${{ secrets.ENV1 }}' > env/env1 
         echo '${{ secrets.ENV2 }}' > env/env2
         echo '${{ secrets.ENV4 }}' > env/env4

         echo "==== run container ===="  
         docker-compose up --no-build --force-recreate --detach jd1
         #docker-compose up --no-build --force-recreate --detach jd2
         #docker-compose up --no-build --force-recreate --detach jd4

         echo "==== RUN task ====" 

         cp 01run.sh 02run.sh &&  sed -i 's/jd1/jd2/g'  02run.sh
         cp 01run.sh 04run.sh &&  sed -i 's/jd1/jd4/g'  04run.sh

         ### 
         #docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit_friend.js'
         #docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit_hw.js'

         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit_new_passerby.js'
         
         # docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; NO_WATER=true; node jd_fruit-6dy-old.js'
         # DO_TEN_WATER_AGAIN='true'

         echo "==== END jd_fruit_new_passerby  ====" 
         
         cat << EOF >  task1.sh

         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; DO_TEN_WATER_AGAIN=true; node jd_fruit-6dy-old.js'
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_newfarmlottery.js'
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit-6dy.js'        
         EOF

         sh  task1.sh


  jd2_fruit_new_task:

    # https://docs.github.com/zh/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#viewing-available-runners-for-a-repository
    runs-on: ubuntu-latest
    needs: jd_info
    #runs-on: ubuntu-20.04
    steps:     
    - name: Run jd2_fruit_new_task
      run: |
         echo "=== current_time ==="
         
         sudo timedatectl set-timezone 'Asia/Shanghai'
         current_time=$(date +"%Y-%m-%d-%k")
         echo ${current_time}
        
         docker info
         docker-compose version
         
         git clone https://github.com/hbstarjason2021/jd-scripts-docker && cd jd-scripts-docker
         docker pull hbstarjason/jd-scripts

         ls -l 

         echo "=== replace env ==="

         echo '${{ secrets.ENV1 }}' > env/env1 
         echo '${{ secrets.ENV2 }}' > env/env2
         echo '${{ secrets.ENV4 }}' > env/env4

         echo "==== run container ===="  
         #docker-compose up --no-build --force-recreate --detach jd1
         docker-compose up --no-build --force-recreate --detach jd2
         #docker-compose up --no-build --force-recreate --detach jd4

         echo "==== run task ====" 

         cp 01run.sh 02run.sh &&  sed -i 's/jd1/jd2/g'  02run.sh
         cp 01run.sh 04run.sh &&  sed -i 's/jd1/jd4/g'  04run.sh

         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit_new_passerby.js'
         echo "==== END jd_fruit_new_passerby  ===="
         
         cat << EOF >  task2.sh


         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; DO_TEN_WATER_AGAIN=true; node jd_fruit-6dy-old.js'         
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_newfarmlottery.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit-6dy.js'        
         EOF

         sh  task2.sh



  jd4_fruit_new_task:

    # https://docs.github.com/zh/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#viewing-available-runners-for-a-repository
    runs-on: ubuntu-latest
    needs: jd_info
    #runs-on: ubuntu-20.04
    steps:     
    - name: Run jd4_fruit_new_task
      run: |
         echo "=== current_time ==="
         
         sudo timedatectl set-timezone 'Asia/Shanghai'
         current_time=$(date +"%Y-%m-%d-%k")
         echo ${current_time}
        
         docker info
         docker-compose version
         
         git clone https://github.com/hbstarjason2021/jd-scripts-docker && cd jd-scripts-docker
         docker pull hbstarjason/jd-scripts

         ls -l 

         echo "=== replace env ==="

         echo '${{ secrets.ENV1 }}' > env/env1 
         echo '${{ secrets.ENV2 }}' > env/env2
         echo '${{ secrets.ENV4 }}' > env/env4

         echo "==== run container ===="  
         #docker-compose up --no-build --force-recreate --detach jd1
         #docker-compose up --no-build --force-recreate --detach jd2
         docker-compose up --no-build --force-recreate --detach jd4

         echo "==== run task ====" 

         cp 01run.sh 02run.sh &&  sed -i 's/jd1/jd2/g'  02run.sh
         cp 01run.sh 04run.sh &&  sed -i 's/jd1/jd4/g'  04run.sh
         
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit_new_passerby.js'
         echo "==== END jd_fruit_new_passerby  ===="

         cat << EOF >  task4.sh


         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; DO_TEN_WATER_AGAIN=true; node jd_fruit-6dy-old.js'                  
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_newfarmlottery.js'
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit-6dy.js'        
         EOF

         sh  task4.sh

         

         
