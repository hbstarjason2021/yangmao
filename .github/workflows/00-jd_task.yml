name: jd_task

on:  
  #push: # push触发
  #  branches: [ main ]
  workflow_dispatch: # 手动触发
  #schedule: # 计划任务触发
  #  - cron: '3 0-23/2 * * *' # cron表达式，Actions时区是UTC时间，所以要往前推8个小时(4-23)
    
jobs:
  jd_task:
    ##if: github.event.repository.owner.id == github.event.sender.id

    #runs-on: ubuntu-latest
    runs-on: ubuntu-20.04
    steps:   
    # 检出
    #- name: Checkout
    #  uses: actions/checkout@v2
      
    # 设置服务器时区为东八区 
    - name: Set time zone
      run: |
         sudo timedatectl set-timezone 'Asia/Shanghai'
         current_time=$(date +"%Y-%m-%d-%k")
         echo ${current_time}
    - name: Run jd_task
      shell: bash
      run: |
      
         timedatectl set-timezone 'Asia/Shanghai'
        
         docker info
         docker-compose version
         git clone https://github.com/hbstarjason2021/jd-scripts-docker && cd jd-scripts-docker
         docker pull hbstarjason/jd-scripts
         
         #docker pull registry.cn-beijing.aliyuncs.com/hbstarjason/jd-scripts@sha256:acf281ad4374d6cac315fa76f78c1d5bddc23980627b5c7ebf7e62745491c191
         #docker tag registry.cn-beijing.aliyuncs.com/hbstarjason/jd-scripts@sha256:acf281ad4374d6cac315fa76f78c1d5bddc23980627b5c7ebf7e62745491c191 hbstarjason/jd-scripts

         echo "=== cat env1 ==="
         cat env/env1
         

         echo "=== replace env1 ==="
         
         ESCAPED_PASSWORD=$(echo "${{ secrets.KEY1_BASE64 }}" | base64 --decode | sed 's/"/\\"/g')
         echo "$ESCAPED_PASSWORD" > env/env1  
         
         #sed -i '2s/pt_key=/pt_key="${{secrets.KEY1}}"/g' env/env1 
         #sed -i '3s/pt_pin=/pt_pin="${{secrets.PIN1}}"/' env/env1
         
         sed -i '3s/pt_pin=/pt_pin=jd_709c349f13b51/g' env/env1

         #sed -i '2s/.*/pt_key=${{secrets.KEY1}}/' env/env1 
         #sed -i '3s/.*/pt_pin=jd_709c349f13b51/' env/env1

         #sed -i '2,3d'  env/env1
         #sed -i 's|JD_COOKIE=pt_key=$pt_key;pt_pin=$pt_pin;|JD_COOKIE=pt_key=${{secrets.KEY1}};pt_pin=jd_709c349f13b51;|' env/env1
         
         cat env/env1


         
         #sed -i '2s/pt_key=/pt_key="${{secrets.KEY4}}"/g' env/env4 
         #sed -i '3s/pt_pin=/pt_pin\=starjason/g' env/env4
         
         #sed -i '2s/pt_key=/pt_key\="${{secrets.KEY2}}"/g' env/env2 
         #sed -i '3s/pt_pin=/pt_pin=yuxiachenqi/g' env/env2
         
         #sed -i '2s/pt_key=/pt_key="${{secrets.KEY3}}"/g' env/env3 
         #sed -i '3s/pt_pin=/pt_pin=fu5520jing/g' env/env3
         
         #sed -i '2s/pt_key=/pt_key="${{secrets.KEY5}}"/g' env/env5 
         #sed -i '3s/pt_pin=/pt_pin=feng_qin07/g' env/env5

         #sed -i '2s/pt_key=/pt_key="${{secrets.KEY6}}"/g' env/env6 
         #sed -i '3s/pt_pin=/pt_pin=15046099446_p/g' env/env6

         echo "==== run jd1 container ===="
         
         docker-compose up --no-build --force-recreate --detach jd1
         docker-compose up --no-build --force-recreate --detach jd4
         docker-compose up --no-build --force-recreate --detach jd2
         docker-compose up --no-build --force-recreate --detach jd3
         
         #docker-compose up --no-build --force-recreate --detach jd5
         #docker-compose up --no-build --force-recreate --detach jd6
         
         docker images 
         docker ps 
         
         ## docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; yxyPhone="${{secrets.YXYPHONE}}";  node yxyapp.js'
         
         #docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_bean_change_ccwav.js'

         #docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts;  JD_JOY_PARK_RUN_ASSETS=0.01 ; node /scripts/jd_joy_park_run.js'
         #docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts;  JD_JOY_PARK_RUN_ASSETS=0.01 ; node /scripts/jd_joy_park_run.js'
         #docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts;  JD_JOY_PARK_RUN_ASSETS=0.01 ; node /scripts/jd_joy_park_run.js'
         #docker exec jd3 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts;  JD_JOY_PARK_RUN_ASSETS=0.01 ; node /scripts/jd_joy_park_run.js'

         # sh 01run.sh
         # sh 00run.sh
         
         ## JOY_RUN_ASSETS=0.04
         JOY_RUN_ASSETS=0.01
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; JOY_RUN_ASSETS=0.01; node jd_joy_run_6dy.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; JOY_RUN_ASSETS=0.01; node jd_joy_run_6dy.js'
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; JOY_RUN_ASSETS=0.01; node jd_joy_run_6dy.js'
         docker exec jd3 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; JOY_RUN_ASSETS=0.01; node jd_joy_run_6dy.js'
         #docker exec jd5 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; JOY_RUN_ASSETS=0.01; node jd_joy_run_6dy.js'
         #docker exec jd6 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; JOY_RUN_ASSETS=0.01; node jd_joy_run_6dy.js'
         
         ##
         #docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_wsdlb.js'
         #docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_wsdlb.js'
         #docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_wsdlb.js'
         #docker exec jd3 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_wsdlb.js'
         
         ## 健康社区
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_health.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_health.js'
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_health.js'
         docker exec jd3 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_health.js'

         ## 签到
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_cashsign.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_cashsign.js'
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_cashsign.js'
         docker exec jd3 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_cashsign.js'

         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_signbeanact.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_signbeanact.js'
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_signbeanact.js'
         docker exec jd3 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_signbeanact.js'
         
         ### 充值中心签到-积分换话费
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_dwapp.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_dwapp.js'
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_dwapp.js'
         docker exec jd3 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_dwapp.js'


         ###### 种豆得豆
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean_help.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean_help.js'
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean_help.js'
         docker exec jd3 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean_help.js'
         #docker exec jd5 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean_help.js'
         #docker exec jd6 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean_help.js' 

         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean-6dy.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean-6dy.js'
         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean-6dy.js'
         docker exec jd3 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_plantBean-6dy.js'

         ###### 上车
         sh 00run.sh
