name: 00jd_task_run

on:  
  #push: # push触发
  #  branches: [ main ]
  workflow_dispatch: # 手动触发
  #schedule: # 计划任务触发
  #  - cron: '3 0-23/2 * * *' # cron表达式，Actions时区是UTC时间，所以要往前推8个小时(4-23)
    
jobs:
  jd_task:
    ##if: github.event.repository.owner.id == github.event.sender.id

    # https://docs.github.com/zh/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#viewing-available-runners-for-a-repository
    runs-on: ubuntu-latest
    #runs-on: ubuntu-20.04
    steps:   
    # 检出
    #- name: Checkout
    #  uses: actions/checkout@v2
      
    # 设置服务器时区为东八区 
    #- name: Set time zone
    #  run: |
    #     sudo timedatectl set-timezone 'Asia/Shanghai'
    #     current_time=$(date +"%Y-%m-%d-%k")
    #     echo ${current_time}
         
    - name: Run jd_task
      # shell: bash
      #env: 
      #   ENV1: ${{ secrets.ENV1 }}
      run: |
         echo "=== current_time ==="
         
         sudo timedatectl set-timezone 'Asia/Shanghai'
         current_time=$(date +"%Y-%m-%d-%k")
         echo ${current_time}
        
         docker info
         docker-compose version
         
         git clone https://github.com/hbstarjason2021/jd-scripts-docker && cd jd-scripts-docker
         docker pull hbstarjason/jd-scripts

         ls -l 

         echo "=== replace env ==="

         ## ESCAPED_PASSWORD=$(echo '${{ secrets.KEY1_BASE64 }}' | base64 --decode | sed 's/"/\\"/g')
         ## echo '$ESCAPED_PASSWORD' > env/env1 

         echo '${{ secrets.ENV1 }}' > env/env1 
         echo '${{ secrets.ENV2 }}' > env/env2
         echo '${{ secrets.ENV4 }}' > env/env4

         echo "==== run container ===="  
         docker-compose up --no-build --force-recreate --detach jd1
         docker-compose up --no-build --force-recreate --detach jd2
         docker-compose up --no-build --force-recreate --detach jd4

         docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_bean_change_ccwav.js'
         docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_bean_change_ccwav.js'
         docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_bean_change_ccwav.js'

         echo "==== run task ====" 

         cp 01run.sh 02run.sh &&  sed -i 's/jd1/jd2/g'  02run.sh
         cp 01run.sh 04run.sh &&  sed -i 's/jd1/jd4/g'  04run.sh

         #docker exec jd1 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit-6dy.js'
         #docker exec jd4 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit-6dy.js'
         #docker exec jd2 bash -c 'set -o allexport; source /all; source /env; source /jd-scripts-docker/resolve.sh; cd /scripts; node jd_fruit-6dy.js'


         sh 01run.sh
         sh 04run.sh
         sh 02run.sh

         

         
